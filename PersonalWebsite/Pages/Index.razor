@page "/page"
@inject NavigationManager Navigation;

<head>
    <link href="css/app.css" rel="stylesheet" />
</head>

<PageTitle>Index</PageTitle>

<div class="container-fluid bg-dark text-light text-right">
    <AuthorizeView>
        <Authorized>
            <p>Welcome, @context.User.Identity!.Name</p>
        </Authorized>
        <NotAuthorized>
            <p>Not yet logged in</p>
        </NotAuthorized>
    </AuthorizeView>
</div>
<div class="container-fluid bg-dark text-light">
    <div class="row">
        <div class="col-12 text-center">
            <img src="@Logo" alt="Company Logo" height="165" width="272" class="mx-auto d-block img-fluid" />
            <h1 class="mt-3">Welcome to the Internal Wiki</h1>
        </div>
    </div>
    <div class="row">
        <div class="col-12 text-center">
            <p>This is the internal wiki for our company. It contains a wealth of information, resources, and documentation that will help you understand and use our products and services.</p>
        </div>
    </div>
</div>

@code {
    [Inject]
    public AuthenticationStateProvider? AuthenticationStateProvider { get; set; }
    private string Logo = "Kudos_logo.png";

    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            //Code to execute once
            await GetAuthenticationState();
        }
        base.OnAfterRender(firstRender);
    }
    private async Task GetAuthenticationState()
    {
        var authenticationState = await AuthenticationStateProvider!.GetAuthenticationStateAsync();
        var user = authenticationState.User;
        if (user.Identity!.IsAuthenticated)
        {
            var username = user.Identity.Name;
            Navigation.NavigateTo($"/mainContent");
        }
        else
        {
            Navigation.NavigateTo($"/authentication/login");
        }
    }
}